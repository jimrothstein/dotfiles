
# ---------------------
#       i3 config file (v4)
# ---------------------

#	REF: https://wiki.archlinux.org/title/I3
#       REF: https://i3wm.org/docs/userguide.html for a complete reference!


#
#       TODO
#       i3bar vs polybar (better control?) 
#
# NOTES:
#       ** NOTE:   Do NOT put comments (#) on same line as a command **
#       Mod4 is 'windows' key on Lenovo
#       -       exec  runs 1st load only
#	-	exec --no-startup-id  # some knd of window appears?
#       -       exec_always  runs on reload as well.
#
##      Move Current container (window) $ws9; then focus with move to 9
##      bindsym $mod+x  move container to workspace 9; workspace 9

## Every instance of wezterm will move to $ws5
## First, must find class    
##       for_window [class="org.wezfurlong.wezterm"] move to workspace $ws5      


## Any rstudio instance manually created will appear on wk5 
## assign [class="rstudio"] 5
## for_window [class="rstudio"] move to workspace $ws5 

# ---------------------------------------
set $mod Mod4
set $myTerm wezterm

# --------------------------
#       FONT FOR WINDOW TITLES. 
# --------------------------
# Will also be used by the bar unless a different font
# is used in the bar {} block below.

#       DEFAULT font
# font pango:monospace 8   

# try unicode glymphs, scales .... try (2024-02-09)
font pango:DejaVu Sans Mono 12

# ----------------------
#       XDG autostart?
# ----------------------
# Start XDG autostart .desktop files using dex. See also
# SEE https://wiki.archlinux.org/index.php/XDG_Autostart
#     exec --no-startup-id dex --autostart --environment i3

# ----------------
#       Applets?
# ----------------
# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

# -----------------
# NetworkManager 
# -----------------
# is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# -------------------------------------------
# Use pactl to adjust volume in PulseAudio.
# -------------------------------------------
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10% && $refresh_i3status
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10% && $refresh_i3status
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

# ---------------
#       Bindsym
# ---------------
#killers
bindsym --release $mod+shift+f exec "killall firefox"

# ------------------------------------------------------------------
# Use Mouse+$mod to drag floating windows to their wanted position
# ------------------------------------------------------------------
floating_modifier $mod

# -------------------------------------
# start a terminal (uses $TERMINAL ?)
# -------------------------------------
bindsym $mod+Return exec $myTerm 

# ----------------------------------
# kill focused window
# ----------------------------------
bindsym $mod+q kill

# ----------------------------------
# start dmenu (a program launcher) (compare dmenu | rofi )
# ----------------------------------
bindsym $mod+d exec --no-startup-id dmenu_run
# bindcode $mod+40 exec "rofi -modi drun,run -show drun"
# There also is i3-dmenu-desktop which only displays applications shipping a
# .desktop file. It is a wrapper around dmenu, so you need that installed.
# bindcode $mod+40 exec --no-startup-id i3-dmenu-desktop

# ----------------------------------
#  use vim motions to change focus
# ----------------------------------
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# ----------------------------------
# move focused window
# ----------------------------------
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+l move up
bindsym $mod+Shift+semicolon move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split  horizontal   (reverse of neovim !?!) like = 
# Look for BLUE LINE (either at right/bottom)
bindsym $mod+Ctrl+h split v    

# split in vertical orientation
#bindsym $mod+- split vertical   like ||
bindsym $mod+Ctrl+v split h    

# ---------------------
# enter fullscreen mode for the focused container
# ---------------------
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating   (cute little window !)
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# ---------------------
# Names for Default Workspaces
# ---------------------
# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1: Terminal"
set $ws2 "2: Firefox"
set $ws3 "3: emacs"
set $ws4 "4: Rstudio"
set $ws5 "5: Thunar"
set $ws6 "6: R (cli)"
set $ws7 "7  Extra Term 7"
set $ws8 "8"
set $ws9 "9: Extra Term"
set $ws10 "10"

# ---------------------
# switch to workspace
# ---------------------
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

# ---------------
#       STARTUP: firefox on ws2 (may need to reboot after change )
# ---------------
exec --no-startup-id i3-msg 'workspace $ws1; exec $myTerm; workspace $ws1'
exec --no-startup-id i3-msg 'workspace $ws2; exec firefox; workspace $ws1'
exec --no-startup-id i3-msg 'workspace $ws3; exec emacs; workspace $ws1'
exec_always --no-startup-id i3-msg 'workspace $ws4; exec_always Rstudio; workspace $ws1'
exec_always i3-msg 'workspace $ws5; exec thunar; workspace $ws1'
exec --no-startup-id i3-msg 'workspace $ws6; exec R; workspace $ws1'
exec --no-startup-id i3-msg 'workspace $ws7; exec $myTerm 

# -------------------------------
# reload the configuration file, restart, exit
# -------------------------------

bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)

bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)

# $mod+E  Completely exit X11
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"


# -----------------------------------------------------
# resize window (you can also use the mouse for that)
# -----------------------------------------------------
#       step #1  $mod+r to enter mode "resize"
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym semicolon resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

# ---------------------
#       RESIZE
# ---------------------
bindsym $mod+r mode "resize"

# --------------
#       BINDING MODE
# --------------
# Press $mod+o followed by either f, t, Escape or Return to launch firefox,
# thunderbird or return to the default mode, respectively.
set $mode_launcher Launch: [f]irefox [t]hunar

#       PRESS $mod+o to active the special mode
bindsym $mod+o mode "$mode_launcher"

mode "$mode_launcher" {
    bindsym f exec firefox
    bindsym t exec thunar 

    bindsym Escape mode "default"
    bindsym Return mode "default"
}




# -------------------------------
#       FIREFOX, manually open 
# -------------------------------
bindsym $mod+b  exec firefox   # open firefox


# i3bar to display a workspace bar, i3status
# tray_output makes room vlc, applet icons
bar {
        position top
        status_command i3status --config ~/.config/i3/i3status.conf
	tray_output primary
}

# -----------
#       hide bar 
# -----------
bindsym $mod+m bar mode toggle

